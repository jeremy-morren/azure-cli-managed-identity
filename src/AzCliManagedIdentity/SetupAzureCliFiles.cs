namespace AzCliManagedIdentity;

public static class SetupAzureCliFiles
{
    /// <summary>
    /// Copy all required Azure CLI config files to default Azure CLI config directory on container startup.
    /// </summary>
    /// <remarks>
    /// The AzureCli@2 task in Azure Pipelines clears credential files after the task completes.
    /// Therefore, we copy the mounted files to a container-specific directory (i.e. ~/.azure) on container startup.
    /// For each request, we create a temp directory, and merge files from both the mounted volume and the container-specific directory.
    /// Hence, if the credentials are cleared, the container-specific directory will still have the files required to get a token.
    /// However, during development where the mounted volume isn't cleared (in fact contents may change), we get any new files from the mounted volume for each request.
    /// </remarks>
    public static void CopyFilesOnStartup()
    {
        // Then copy the files from the source Azure CLI config directory (i.e. mounted volume)
        foreach (var file in GetFiles(GetSourceConfigDir(), SourceFilesToCopy))
            CopyHelpers.CopyFile(file, GetCliConfigDir());
    }

    /// <summary>
    /// Copies the required Azure CLI config files to a temporary directory to be used for the Azure CLI token request.
    /// </summary>
    public static void CopyFilesForRequest(string tempDir)
    {
        // First: Copy generated files from the default Azure CLI config directory
        foreach (var file in GetFiles(GetCliConfigDir(), DefaultFilesToCopy))
            CopyHelpers.CopyFile(file, tempDir);

        // Then copy the files from the source Azure CLI config directory (i.e. mounted volume)
        foreach (var file in GetFiles(GetSourceConfigDir(), SourceFilesToCopy))
            CopyHelpers.CopyFile(file, tempDir);
    }

    /// <summary>
    /// Files generated by the Azure CLI itself (i.e. not credentials).
    /// </summary>
    private static readonly string[] DefaultFilesToCopy =
    [
        "versionCheck.json",
        "commandIndex.json"
    ];

    /// <summary>
    /// Wildcard file names to copy from the mounted Azure CLI config directory. These are the files required to get a token.
    /// </summary>
    private static readonly string[] SourceFilesToCopy =
    [
        "az.*",
        "azureProfile.json",
        "*config",
        "service_principal_entries.json",
        "msal_http*",
        // Ignore any msal_token*.bin files (which will be encrypted and therefore unreadable by the container)
        "msal_token*.json"
    ];

    private static IEnumerable<string> GetFiles(string directory, string[] patterns) =>
        patterns.SelectMany(pattern => Directory.GetFiles(directory, pattern, SearchOption.TopDirectoryOnly));

    /// <summary>
    /// Returns default Azure CLI config directory (i.e. ~/.azure on Linux or %USERPROFILE%\.azure on Windows).
    /// </summary>
    /// <remarks>
    /// We use this directory to store config files at container startup.
    /// </remarks>
    private static string GetCliConfigDir() =>
        Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.UserProfile), ".azure");

    /// <summary>
    /// Gets the source Azure CLI config (i.e. mounted volume) directory.
    /// </summary>
    /// <remarks>
    /// This directory is expected to be mounted as a read-only volume in the container.
    /// </remarks>
    public static string GetSourceConfigDir()
    {
        // Then copy the files from the source Azure CLI config directory (i.e. mounted volume)
        var directory = EnvVariableHelpers.GetValue("SOURCE_AZURE_CONFIG");
        if (!Directory.Exists(directory))
            throw new DirectoryNotFoundException($"Source Azure CLI config directory not found: '{directory}'");
        return directory;
    }
}